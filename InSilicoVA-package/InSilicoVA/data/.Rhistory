x <- c(1, 2, 3)
y <- c(3, 4, 7)
z <- c(x, y)
clear
install.packages("shiny")
library(shiny)
runExample("01_hello")
x <- c(1, 2, 3)
x *= 3
x = x * 3
y <- (1, 2, 2)
y <- c(1, 2, 2)
z = x * y
x <- c([1, 2, 3]. [4, 5, 6])
showExample(shiny)
runExample(shiny)
library(shiny)
runExample("01_shiny")
runExample("01_hello")
install.packages("ggplot2")
install.packages("coda")
install.pckages("rJava")
install.packages("InSilicoVA_1.0.tar.gz", type = "source", repos = NULL)
install.packages("rJava")
help("rJava")
package("InSilicoVA")
install.packages("InSilicoVA_1.0.tar.gz", type = "source", repos = NULL)
help(load)
package(shiny)
help(rJava)
installed.packages
install.packages("~/ProbCauseShiny/InSilicoVA-package/InSilicoVA_1.0.tar.gz", type = "source", repos = NULL)
help(InSilicoVA)
man(InSilicoVA)
InSilicoVA
library(shiny)
shiny
help(shiny)
library(ggplot2)
library(coda)
help(ggplot2)
library(coda)
help(coda)
library(coda)
help(coda)
library(InSilicoVA)
help(InSilicoVA)
help(InSilicoVA::)
search()
package(InSilicoVA)
info(InSilicoVA)
InSilicoVA::
help(insilico)
load(SampleInput.rda)
load("SampleInput.rda")
search()
load(ggplot2)
library(ggplot2)
library(coda)
library(rJava)
library(InSilicoVA)
load(causetext.rda)
load(data.causetext.rda)
insilico(trees)
library(InSilicoVA)
data(SampleInput)
SampleInput
SampleInput$data
data
data <- SampleData
data <- SampleInput
insilico(data)
data
subpop <- SampleInput$subpop
subpop
fit1<- insilico( data, subpop = NULL, HIV = "h", Malaria = "h",
length.sim = 400, burnin = 200, thin = 10 , seed = 1,
InterVA.prior = TRUE, external.sep = TRUE, keepProbbase.level = TRUE)
data
SampleInput
SampleInput
data
data <- SampleInput$data
subpop <- SampleInput$subpop
fit1<- insilico( data, subpop = NULL, HIV = "h", Malaria = "h",
length.sim = 400, burnin = 200, thin = 10 , seed = 1,
InterVA.prior = TRUE, external.sep = TRUE, keepProbbase.level = TRUE)
plot(fit1)
plot.insilido(fit1)
plot.insilico(fit1)
plot(fit1, top = 15, horiz = FALSE, fill = "gold",
bw = TRUE, title = "Top 15 CSMFs", angle = 70)
setwd("~/ProbCauseShiny/InSilicoVA-package/InSilicoVA/data")
testee <- load("testReading.rda")
testee
library(InSilicoVA)
postInsilico <- insilico(testee)
testee[1]
testee[0]
postInsilico <- insilico(testee[1])
postInsilico <- insilico(data=testee)
testee
postInsilico <- insilico(toString(testee))
postInsilico <- (load("testReading.rda"))
postInsilico <- insilico(load("testReading.rda"))
SampleInput
testee
data(testee)
SampleInput[0]
get(testee)
rm(postInsilico)
postInsilico <- insilico(get(testee))
actualData <- get(testee)
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
Q
shiny::runApp('~/ProbCauseShiny/webApp')
View(userData)
n
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
SampleInput
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
SampleInput[1]
shiny::runApp('~/ProbCauseShiny/webApp')
shiny::runApp('~/ProbCauseShiny/webApp')
SampleInput$data
save(SampleInput, file="test.rda")
exit()
