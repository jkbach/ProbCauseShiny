x <- c(1, 2, 3)
y <- c(3, 4, 7)
z <- c(x, y)
clear
install.packages("shiny")
library(shiny)
runExample("01_hello")
x <- c(1, 2, 3)
x *= 3
x = x * 3
y <- (1, 2, 2)
y <- c(1, 2, 2)
z = x * y
x <- c([1, 2, 3]. [4, 5, 6])
showExample(shiny)
runExample(shiny)
library(shiny)
runExample("01_shiny")
runExample("01_hello")
install.packages("ggplot2")
install.packages("coda")
install.pckages("rJava")
install.packages("InSilicoVA_1.0.tar.gz", type = "source", repos = NULL)
install.packages("rJava")
help("rJava")
package("InSilicoVA")
install.packages("InSilicoVA_1.0.tar.gz", type = "source", repos = NULL)
help(load)
package(shiny)
help(rJava)
installed.packages
install.packages("~/ProbCauseShiny/InSilicoVA-package/InSilicoVA_1.0.tar.gz", type = "source", repos = NULL)
help(InSilicoVA)
man(InSilicoVA)
InSilicoVA
library(shiny)
shiny
help(shiny)
library(ggplot2)
library(coda)
help(ggplot2)
library(coda)
help(coda)
library(coda)
help(coda)
library(InSilicoVA)
help(InSilicoVA)
help(InSilicoVA::)
search()
package(InSilicoVA)
info(InSilicoVA)
InSilicoVA::
help(insilico)
load(SampleInput.rda)
load("SampleInput.rda")
search()
load(ggplot2)
library(ggplot2)
library(coda)
library(rJava)
library(InSilicoVA)
load(causetext.rda)
load(data.causetext.rda)
insilico(trees)
library(InSilicoVA)
data(SampleInput)
SampleInput
SampleInput$data
data
data <- SampleData
data <- SampleInput
insilico(data)
data
subpop <- SampleInput$subpop
subpop
fit1<- insilico( data, subpop = NULL, HIV = "h", Malaria = "h",
length.sim = 400, burnin = 200, thin = 10 , seed = 1,
InterVA.prior = TRUE, external.sep = TRUE, keepProbbase.level = TRUE)
data
SampleInput
SampleInput
data
data <- SampleInput$data
subpop <- SampleInput$subpop
fit1<- insilico( data, subpop = NULL, HIV = "h", Malaria = "h",
length.sim = 400, burnin = 200, thin = 10 , seed = 1,
InterVA.prior = TRUE, external.sep = TRUE, keepProbbase.level = TRUE)
plot(fit1)
plot.insilido(fit1)
plot.insilico(fit1)
plot(fit1, top = 15, horiz = FALSE, fill = "gold",
bw = TRUE, title = "Top 15 CSMFs", angle = 70)
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp()
shiny::runApp()
shiny::runApp()
Q
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
library(InSilicoVA)
data(SampleInput)
data <- SampleInput$data
fit1<- insilico( data, subpop = NULL, HIV = "h", Malaria = "h",
length.sim = 400, burnin = 200, thin = 10 , seed = 1,
InterVA.prior = TRUE, external.sep = TRUE, keepProbbase.level = TRUE)
getwd()
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
which InSilicoVA
shiny::runApp('ProbCauseShiny/webApp')
installed.packages(.Library)
find.package(InSilicoVA)
find.package("InSilicoVA")
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
shiny::runApp('ProbCauseShiny/webApp')
read.csv("small.csv")
setwd("~/ProbCauseShiny/webApp")
read.csv("small.csv")
data <- read.csv("small.csv")
fit<- insilico(userData, subpop = NULL, isNumeric = isolate(input$isNumeric),
length.sim = isolate(input$simLength), burnin = burn, thin = 10,
conv.csmf = 0.02, external.sep = isolate(input$externalSep),
keepProbbase.level = isolate(input$keepProbbase), datacheck = isolate(input$datacheck),
seed = isolate(input$seed))
}
fit<- insilico(data, subpop = NULL, isNumeric = isolate(input$isNumeric),
length.sim = isolate(input$simLength), burnin = burn, thin = 10,
conv.csmf = 0.02, external.sep = isolate(input$externalSep),
keepProbbase.level = isolate(input$keepProbbase), datacheck = isolate(input$datacheck),
seed = isolate(input$seed))
fit1<- insilico(data, subpop = NULL,
length.sim = 400, burnin = 200, thin = 10 , seed = 1,
external.sep = TRUE, keepProbbase.level = TRUE)
summary.insilico("fit1")
summary.insilico(fit1)
write.csv(summary.insilico(fit1), "test2.csv")
sum = summary.insilico(fit1)
sum
write.csv(sum, "test2.csv")
data(sum)
summary(fit1)
write.csv(summary(fit1), "test2.csv")
write.csv(fit1, "test2.csv")
View(data)
shiny::runApp()
fit<- insilico(data, subpop = NULL, isNumeric = isolate(input$isNumeric),
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE, useProbbase = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1)
fit<- insilico(data, subpop = NULL, isNumeric = FALSE,
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE, useProbbase = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1)
shiny::runApp()
shiny::runApp()
newProbs <- read.csv("testInput.csv")
condprob
data(condprob)
View(newProbs)
View(condprob)
matrix(newProbs)
data(newProbs)
newProbsMatrix <- matrix(newProbs)
View(newProbsMatrix)
delete(newProbsMatrix)
remove(newProbsMatrix)
summary(newProbs)
fit<- insilico(data, subpop = NULL, isNumeric = FALSE,
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE, useProbbase = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1)
fit<- insilico(data, subpop = NULL, isNumeric = FALSE,
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1)
fit<- insilico(data, subpop = NULL, isNumeric = FALSE,
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1, cond.prob.touse = newProbs)
newProbs[,60]
fit<- insilico(data, subpop = NULL, isNumeric = FALSE,
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1, cond.prob.touse = newProbs[,60])
fit<- insilico(data, subpop = NULL, isNumeric = FALSE,
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1, cond.prob.touse = newProbs[,61])
newProbs[0,245]
newProbs[0,60]
newProbs[0,61]
newProbs[0,60][0, 245]
newProbs[60]
fit<- insilico(data, subpop = NULL, isNumeric = FALSE,
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1, cond.prob.touse = newProbs)
fit<- insilico(data, subpop = NULL, isNumeric = FALSE,
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1, cond.prob.touse = condprob)
newProbs
condprob
write.csv(condprob, "dontCare.csv")
getwd()
read.csv("dontCare.csv")
newProbs <- read.csv("dontCare.csv")
newProbs
fit<- insilico(data, subpop = NULL, isNumeric = FALSE,
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1, cond.prob.touse = newProbs)
write.csv(condprob, "dontCare2.csv")
dontCare2 = read.csv("dontCare2.csv")
write.csv(condprob, "dontCare3.csv", col.names = FALSE, row.names = FALSE)
dontCare2 = read.csv("dontCare3.csv")
fit<- insilico(data, subpop = NULL, isNumeric = FALSE,
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1, cond.prob.touse = dontCare2)
shiny::runApp()
remove(dontCare2)
remove(newProbs)
newProbs <- read.csv("dontCare.csv")
fit<- insilico(data, subpop = NULL, isNumeric = FALSE,
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1, cond.prob.touse = newProbs)
plot(fit)
fit<- insilico(data, subpop = NULL, isNumeric = FALSE,
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1, cond.prob.touse = newProbs)
plot(fit)
newProbs <- read.csv("dontCare.csv")
fit<- insilico(data, subpop = NULL, isNumeric = FALSE,
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1, cond.prob.touse = newProbs)
plot(fit)
shiny::runApp()
shiny::runApp()
write.csv(conprob, "testCond.csv")
write.csv(condprob, "testCond.csv")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
fit<- insilico(data, subpop = NULL, isNumeric = FALSE,
length.sim = 300, burnin = 150, thin = 10,
conv.csmf = 0.02, external.sep = TRUE,
keepProbbase.level = TRUE, datacheck = TRUE,
seed = 1, cond.prob.touse = newProbs, useProbbase = TRUE)
